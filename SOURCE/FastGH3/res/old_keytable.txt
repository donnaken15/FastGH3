
	#region keytable (old)
	/* = new Key[]
	{
		new Key() {
			pos = new Point(3, rows[0]),
			size = dB,
			key = Keys.Escape,
			ctrl = KeyID.Escape,
			name = "Es"
		}, new Key() {
			pos = new Point(3+(23*2), rows[0]),
			size = dB,
			key = Keys.F1,
			ctrl = KeyID.F1,
			name = "F1"
		}, new Key() {
			pos = new Point(3+(23*3), rows[0]),
			size = dB,
			key = Keys.F2,
			ctrl = KeyID.F2,
			name = "F2"
		}, new Key() {
			pos = new Point(3+(23*4), rows[0]),
			size = dB,
			key = Keys.F3,
			ctrl = KeyID.F3,
			name = "F3"
		}, new Key() {
			pos = new Point(3+(23*5), rows[0]),
			size = dB,
			key = Keys.F4,
			ctrl = KeyID.F4,
			name = "F4"
		}, new Key() {
			pos = new Point(3+(23*7), rows[0]),
			size = dB,
			key = Keys.F5,
			ctrl = KeyID.F5,
			name = "F5"
		}, new Key() {
			pos = new Point(3+(23*8), rows[0]),
			size = dB,
			key = Keys.F6,
			ctrl = KeyID.F6,
			name = "F6"
		}, new Key() {
			pos = new Point(3+(23*9), rows[0]),
			size = dB,
			key = Keys.F7,
			ctrl = KeyID.F7,
			name = "F7"
		}, new Key() {
			pos = new Point(3+(23*10), rows[0]),
			size = dB,
			key = Keys.F8,
			ctrl = KeyID.F8,
			name = "F8"
		}, new Key() {
			pos = new Point(3+(23*12), rows[0]),
			size = dB,
			key = Keys.F9,
			ctrl = KeyID.F9,
			name = "F9"
		}, /*new KeyLayout() {
			pos = new Point(3+(23*13), buttonRows[0]),
			size = defaultButtonSize,
			key = Keys.LButton,
			control = KeyID.Escape,
			name = "10"
		}, new KeyLayout() {
			pos = new Point(3+(23*14), buttonRows[0]),
			size = defaultButtonSize,
			key = Keys.LButton,
			control = KeyID.Escape,
			name = "11"
		}, new KeyLayout() {
			pos = new Point(3+(23*15), buttonRows[0]),
			size = defaultButtonSize,
			key = Keys.LButton,
			control = KeyID.Escape,
			name = "12"
		},* new Key() {
			pos = new Point(376, rows[0]),
			size = dB,
			key = Keys.PrintScreen,
			ctrl = KeyID.PrScr,
			name = "Pr"
		}, new Key() {
			pos = new Point(399, rows[0]),
			size = dB,
			key = Keys.Scroll,
			ctrl = KeyID.ScrLck,
			name = "Sc"
		}, new Key() {
			pos = new Point(422, rows[0]),
			size = dB,
			key = Keys.Pause,
			ctrl = KeyID.Pause,
			name = "Br"
		}, new Key() {
			pos = new Point(3, rows[1]),
			size = dB,
			key = Keys.Oemtilde,
			ctrl = KeyID.Tilda,
			name = "~"
		}, new Key() {
			pos = new Point(3+(23*1), rows[1]),
			size = dB,
			key = Keys.D1,
			ctrl = KeyID.D1,
			name = "1"
		}, new Key() {
			pos = new Point(3+(23*2), rows[1]),
			size = dB,
			key = Keys.D2,
			ctrl = KeyID.D2,
			name = "2"
		}, new Key() {
			pos = new Point(3+(23*3), rows[1]),
			size = dB,
			key = Keys.D3,
			ctrl = KeyID.D3,
			name = "3"
		}, new Key() {
			pos = new Point(3+(23*4), rows[1]),
			size = dB,
			key = Keys.D4,
			ctrl = KeyID.D4,
			name = "4"
		}, new Key() {
			pos = new Point(3+(23*5), rows[1]),
			size = dB,
			key = Keys.D5,
			ctrl = KeyID.D5,
			name = "5"
		}, new Key() {
			pos = new Point(3+(23*6), rows[1]),
			size = dB,
			key = Keys.D6,
			ctrl = KeyID.D6,
			name = "6"
		}, new Key() {
			pos = new Point(3+(23*7), rows[1]),
			size = dB,
			key = Keys.D7,
			ctrl = KeyID.D7,
			name = "7"
		}, new Key() {
			pos = new Point(3+(23*8), rows[1]),
			size = dB,
			key = Keys.D8,
			ctrl = KeyID.D8,
			name = "8"
		}, new Key() {
			pos = new Point(3+(23*9), rows[1]),
			size = dB,
			key = Keys.D9,
			ctrl = KeyID.D9,
			name = "9"
		}, new Key() {
			pos = new Point(3+(23*10), rows[1]),
			size = dB,
			key = Keys.D0,
			ctrl = KeyID.D0,
			name = "0"
		}, new Key() {
			pos = new Point(3+(23*11), rows[1]),
			size = dB,
			key = Keys.OemMinus,
			ctrl = KeyID.Sign,
			name = "_"
		}, new Key() {
			pos = new Point(3+(23*12), rows[1]),
			size = dB,
			key = Keys.Oemplus,
			ctrl = KeyID.Equal,
			name = "+"
		}, new Key() {
			pos = new Point(3+(23*13), rows[1]),
			size = new Size(68, dbh),
			key = Keys.Back,
			ctrl = KeyID.Back,
			name = "Backspace"
		}, new Key() {
			pos = new Point(376, rows[1]),
			size = dB,
			key = Keys.Insert,
			ctrl = KeyID.Ins,
			name = "In"
		}, new Key() {
			pos = new Point(399, rows[1]),
			size = dB,
			key = Keys.Home,
			ctrl = KeyID.Home,
			name = "H"
		}, new Key() {
			pos = new Point(422, rows[1]),
			size = dB,
			key = Keys.PageUp,
			ctrl = KeyID.PgUp,
			name = "U"
		}, new Key() {
			pos = new Point(376, rows[2]),
			size = dB,
			key = Keys.Delete,
			ctrl = KeyID.Delete,
			name = "Dl"
		}, new Key() {
			pos = new Point(399, rows[2]),
			size = dB,
			key = Keys.End,
			ctrl = KeyID.End,
			name = "E"
		}, new Key() {
			pos = new Point(422, rows[2]),
			size = dB,
			key = Keys.PageDown,
			ctrl = KeyID.PgDn,
			name = "D"
		}, new Key() {
			pos = new Point(3, rows[2]),
			size = new Size(37, dbh),
			key = Keys.Tab,
			ctrl = KeyID.Tab,
			name = "Tab"
		}, new Key() {
			pos = new Point(43, rows[2]),
			size = dB,
			key = Keys.Q,
			ctrl = KeyID.Q,
			name = "Q"
		}, new Key() {
			pos = new Point(66, rows[2]),
			size = dB,
			key = Keys.W,
			ctrl = KeyID.W,
			name = "W"
		}, new Key() {
			pos = new Point(89, rows[2]),
			size = dB,
			key = Keys.E,
			ctrl = KeyID.E,
			name = "E"
		}, new Key() {
			pos = new Point(112, rows[2]),
			size = dB,
			key = Keys.R,
			ctrl = KeyID.R,
			name = "R"
		}, new Key() {
			pos = new Point(135, rows[2]),
			size = dB,
			key = Keys.T,
			ctrl = KeyID.T,
			name = "T"
		}, new Key() {
			pos = new Point(158, rows[2]),
			size = dB,
			key = Keys.Y,
			ctrl = KeyID.Y,
			name = "Y"
		}, new Key() {
			pos = new Point(181, rows[2]),
			size = dB,
			key = Keys.U,
			ctrl = KeyID.U,
			name = "U"
		}, new Key() {
			pos = new Point(204, rows[2]),
			size = dB,
			key = Keys.I,
			ctrl = KeyID.I,
			name = "I"
		}, new Key() {
			pos = new Point(227, rows[2]),
			size = dB,
			key = Keys.O,
			ctrl = KeyID.O,
			name = "O"
		}, new Key() {
			pos = new Point(250, rows[2]),
			size = dB,
			key = Keys.P,
			ctrl = KeyID.P,
			name = "P"
		}, new Key() {
			pos = new Point(273, rows[2]),
			size = dB,
			key = Keys.OemOpenBrackets,
			ctrl = KeyID.BrackL,
			name = "["
		}, new Key() {
			pos = new Point(296, rows[2]),
			size = dB,
			key = Keys.OemCloseBrackets,
			ctrl = KeyID.BrackR,
			name = "]"
		}, new Key() {
			pos = new Point(320, rows[2]),
			size = new Size(50, dbh),
			key = Keys.OemBackslash,
			ctrl = KeyID.BkSlash,
			name = "\\"
		}, new Key() {
			pos = new Point(3, rows[3]),
			size = new Size(44, dbh),
			key = Keys.CapsLock,
			ctrl = KeyID.Caps,
			name = "CapsLk"
		}, new Key() {
			pos = new Point(50, rows[3]),
			size = dB,
			key = Keys.A,
			ctrl = KeyID.A,
			name = "A"
		}, new Key() {
			pos = new Point(73, rows[3]),
			size = dB,
			key = Keys.S,
			ctrl = KeyID.S,
			name = "S"
		}, new Key() {
			pos = new Point(96, rows[3]),
			size = dB,
			key = Keys.D,
			ctrl = KeyID.D,
			name = "D"
		}, new Key() {
			pos = new Point(119, rows[3]),
			size = dB,
			key = Keys.F,
			ctrl = KeyID.F,
			name = "F"
		}, new Key() {
			pos = new Point(142, rows[3]),
			size = dB,
			key = Keys.G,
			ctrl = KeyID.G,
			name = "G"
		}, new Key() {
			pos = new Point(165, rows[3]),
			size = dB,
			key = Keys.H,
			ctrl = KeyID.H,
			name = "H"
		}, new Key() {
			pos = new Point(188, rows[3]),
			size = dB,
			key = Keys.J,
			ctrl = KeyID.J,
			name = "J"
		}, new Key() {
			pos = new Point(211, rows[3]),
			size = dB,
			key = Keys.K,
			ctrl = KeyID.K,
			name = "K"
		}, new Key() {
			pos = new Point(234, rows[3]),
			size = dB,
			key = Keys.L,
			ctrl = KeyID.L,
			name = "L"
		}, new Key() {
			pos = new Point(257, rows[3]),
			size = dB,
			key = Keys.OemSemicolon,
			ctrl = KeyID.SColon,
			name = ":"
		}, new Key() {
			pos = new Point(280, rows[3]),
			size = dB,
			key = Keys.OemQuotes,
			ctrl = KeyID.DQuote,
			name = "\""
		}, new Key() {
			pos = new Point(304, rows[3]),
			size = new Size(66, dbh),
			key = Keys.Enter,
			ctrl = KeyID.Enter,
			name = "Enter"
		}, new Key() {
			pos = new Point(3, rows[4]),
			size = new Size(61, dbh),
			key = Keys.LShiftKey,
			ctrl = KeyID.LShift,
			name = "Shift"
		}, new Key() {
			pos = new Point(66, rows[4]),
			size = dB,
			key = Keys.Z,
			ctrl = KeyID.Z,
			name = "Z"
		}, new Key() {
			pos = new Point(89, rows[4]),
			size = dB,
			key = Keys.X,
			ctrl = KeyID.X,
			name = "X"
		}, new Key() {
			pos = new Point(112, rows[4]),
			size = dB,
			key = Keys.C,
			ctrl = KeyID.C,
			name = "C"
		}, new Key() {
			pos = new Point(135, rows[4]),
			size = dB,
			key = Keys.V,
			ctrl = KeyID.V,
			name = "V"
		}, new Key() {
			pos = new Point(158, rows[4]),
			size = dB,
			key = Keys.B,
			ctrl = KeyID.B,
			name = "B"
		}, new Key() {
			pos = new Point(181, rows[4]),
			size = dB,
			key = Keys.N,
			ctrl = KeyID.N,
			name = "N"
		}, new Key() {
			pos = new Point(204, rows[4]),
			size = dB,
			key = Keys.M,
			ctrl = KeyID.M,
			name = "M"
		}, new Key() {
			pos = new Point(227, rows[4]),
			size = dB,
			key = Keys.Oemcomma,
			ctrl = KeyID.Comma,
			name = "<"
		}, new Key() {
			pos = new Point(250, rows[4]),
			size = dB,
			key = Keys.OemPeriod,
			ctrl = KeyID.Period,
			name = ">"
		}, new Key() {
			pos = new Point(273, rows[4]),
			size = dB,
			key = Keys.OemQuestion,
			ctrl = KeyID.QMark,
			name = "?"
		}, new Key() {
			pos = new Point(297, rows[4]),
			size = new Size(73, dbh),
			key = Keys.RShiftKey,
			ctrl = KeyID.RShift,
			name = "Shift"
		}, new Key() {
			pos = new Point(3, rows[5]),
			size = new Size(29, dbh),
			key = Keys.LControlKey,
			ctrl = KeyID.LCtrl,
			name = "Ctrl"
		}, /*new KeyLayout() {
			pos = new Point(66, buttonRows[4]),
			size = defaultButtonSize,
			key = Keys.LWin,
			control = KeyID.Win,
			name = "Win"
		},* new Key() {
			pos = new Point(66, rows[5]),
			size = new Size(29, dbh),
			key = Keys.LMenu,
			ctrl = KeyID.LAlt,
			name = "Alt"
		}, new Key() {
			pos = new Point(97, rows[5]),
			size = new Size(139, dbh),
			key = Keys.Space,
			ctrl = KeyID.Space,
			name = ""
		}, new Key() {
			pos = new Point(239, rows[5]),
			size = new Size(29, dbh),
			key = Keys.RMenu,
			ctrl = KeyID.RAlt,
			name = "Alt"
		}, /*new KeyLayout() {
			pos = new Point(271, buttonRows[4]),
			size = new Size(29, defaultButtonHeight),
			key = Keys.B,
			control = KeyID.B,
			name = "B"
		}, new KeyLayout() {
			pos = new Point(303, buttonRows[4]),
			size = new Size(35, defaultButtonHeight),
			key = Keys.Menu,
			control = KeyID.Menu,
			name = "N"
		},* new Key() {
			pos = new Point(341, rows[5]),
			size = new Size(29, dbh),
			key = Keys.RControlKey,
			ctrl = KeyID.RCtrl,
			name = "Ctrl"
		}, new Key() {
			pos = new Point(399, rows[4]),
			size = dB,
			key = Keys.Up,
			ctrl = KeyID.Up,
			name = "↑"
		}, new Key() {
			pos = new Point(376, rows[5]),
			size = dB,
			key = Keys.Left,
			ctrl = KeyID.Left,
			name = "←"
		}, new Key() {
			pos = new Point(399, rows[5]),
			size = dB,
			key = Keys.Down,
			ctrl = KeyID.Down,
			name = "↓"
		}, new Key() {
			pos = new Point(422, rows[5]),
			size = dB,
			key = Keys.Right,
			ctrl = KeyID.Right,
			name = "→"
		}, new Key() {
			pos = new Point(449, rows[1]),
			size = dB,
			key = Keys.NumLock,
			ctrl = KeyID.NumLock,
			name = "nL"
		},/* new KeyLayout() {
			pos = new Point(449, buttonRows[1]),
			size = defaultButtonSize,
			key = Keys.Oem, // WHAT KEY IS THIS
			control = KeyID.NumSls,
			name = "nL"
		}, new KeyLayout() {
			pos = new Point(495, buttonRows[1]),
			size = defaultButtonSize,
			key = Keys.oem,
			control = KeyID.NumAst,
			name = "nL"
		},* new Key() {
			pos = new Point(449, rows[2]),
			size = dB,
			key = Keys.NumPad7,
			ctrl = KeyID.Num7,
			name = "7"
		}, /*new KeyLayout() {
			pos = new Point(518, buttonRows[2]),
			size = new Size(21, 48),
			key = Keys.Oemplus,
			control = KeyID.NumPlus,
			name = "+"
		}, new KeyLayout() {
			pos = new Point(518, buttonRows[4]),
			size = new Size(21, 48),
			key = Keys.oem,
			control = KeyID.NumEnt,
			name = "E"
		}, new KeyLayout() {
			pos = new Point(518, buttonRows[1]),
			size = defaultButtonSize,
			key = Keys.OemMinus,
			control = KeyID.Num,
			name = "-"
		},* new Key() {
			pos = new Point(495, rows[5]),
			size = dB,
			key = Keys.OemPeriod,
			ctrl = KeyID.NumDel,
			name = "."
		}, new Key() {
			pos = new Point(472, rows[2]),
			size = dB,
			key = Keys.NumPad8,
			ctrl = KeyID.Num8,
			name = "8"
		}, new Key() {
			pos = new Point(495, rows[2]),
			size = dB,
			key = Keys.NumPad9,
			ctrl = KeyID.Num9,
			name = "9"
		}, new Key() {
			pos = new Point(449, rows[3]),
			size = dB,
			key = Keys.NumPad4,
			ctrl = KeyID.Num4,
			name = "4"
		}, new Key() {
			pos = new Point(472, rows[3]),
			size = dB,
			key = Keys.NumPad5,
			ctrl = KeyID.Num5,
			name = "5"
		}, new Key() {
			pos = new Point(495, rows[3]),
			size = dB,
			key = Keys.NumPad6,
			ctrl = KeyID.Num6,
			name = "6"
		}, new Key() {
			pos = new Point(449, rows[4]),
			size = dB,
			key = Keys.NumPad1,
			ctrl = KeyID.Num1,
			name = "1"
		}, new Key() {
			pos = new Point(472, rows[4]),
			size = dB,
			key = Keys.NumPad2,
			ctrl = KeyID.Num2,
			name = "2"
		}, new Key() {
			pos = new Point(495, rows[4]),
			size = dB,
			key = Keys.NumPad3,
			ctrl = KeyID.Num3,
			name = "3"
		}, new Key() {
			pos = new Point(449, rows[5]),
			size = new Size(44, dbh),
			key = Keys.NumPad0,
			ctrl = KeyID.Num0,
			name = "0"
		},
	};*/
	#endregion